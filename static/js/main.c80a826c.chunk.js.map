{"version":3,"sources":["constants/index.ts","store/index.ts","helpers/api.ts","components/TodoItem.tsx","components/TodoList.tsx","App.tsx","index.tsx"],"names":["API_URL","SORT_BY_OPTIONS","ORDER","sortBy","field","type","isLoading","state","hasError","listOfTodos","todos","getOrder","order","getSortBy","initialState","store","createStore","action","loading","filter","todo","id","map","completed","composeWithDevTools","getTodos","a","fetch","response","json","getUsers","TodoItem","title","user","dispatch","useDispatch","className","checked","onChange","setStatus","name","onClick","deleteTodo","TodoList","useSelector","activeFilter","sortedTodos","useMemo","sortDirection","sort","b","localeCompare","Number","key","App","error","length","Promise","all","then","todoFromServer","usersFromServer","preparedTodosList","post","find","userId","handleSuccess","catch","finally","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c80a826c.chunk.js","sourcesContent":["export const API_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nexport const SORT_BY_OPTIONS = {\n  title: 'title',\n  completed: 'completed',\n  userName: 'userName',\n};\n\nexport const ORDER = {\n  asc: 'asc',\n  desc: 'desc',\n};\n","import { createStore, AnyAction } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { SORT_BY_OPTIONS, ORDER } from '../constants';\n\nconst START_LOADING = 'START_LOADING';\nconst HANDLE_SUCCESS = 'HANDLE_SUCCESS';\nconst HANDLE_ERROR = 'HANDLE_ERROR';\nconst FINISH_LOADING = 'FINISH_LOADING';\nconst DELETE_TODO = 'DELETE_TODO';\nconst SET_STATUS = 'SET_STATUS';\nconst SORT_BY = 'SORT_BY';\n\nexport const startLoading = () => ({ type: START_LOADING });\nexport const finishLoading = () => ({ type: FINISH_LOADING });\nexport const handleSuccess = (todos: Todo[]) => ({ type: HANDLE_SUCCESS, todos });\nexport const handleError = () => ({ type: HANDLE_ERROR });\nexport const deleteTodo = (id: number) => ({ type: DELETE_TODO, id });\nexport const setStatus = (id: number) => ({ type: SET_STATUS, id });\nexport const sortBy = (field: string) => ({ type: SORT_BY, field })\n\nexport const isLoading = (state: RootState) => state.isLoading;\nexport const hasError = (state: RootState) => state.hasError;\nexport const listOfTodos = (state: RootState) => state.todos;\nexport const getOrder = (state: RootState) => state.order;\nexport const getSortBy = (state: RootState) => state.sortBy;\n\nexport type RootState = {\n  isLoading: boolean;\n  hasError: boolean;\n  sortBy: string;\n  order: string;\n  todos: Todo[];\n};\n\nconst initialState: RootState = {\n  isLoading: false,\n  hasError: false,\n  sortBy: SORT_BY_OPTIONS.title,\n  order: ORDER.asc,\n  todos: [],\n};\n\nconst rootReducer = (state = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case START_LOADING:\n      return {\n        ...state,\n        loading: true,\n        hasError: false,\n      };\n\n    case HANDLE_SUCCESS:\n      return {\n        ...state,\n        todos: action.todos,\n        loading: false,\n      };\n\n    case HANDLE_ERROR:\n      return {\n        ...state,\n        hasError: true,\n        isLoading: false,\n      };\n\n    case FINISH_LOADING:\n      return {\n        ...state,\n        loading: false,\n      };\n\n    case DELETE_TODO:\n      return {\n        ...state,\n        todos: state.todos.filter(todo => todo.id !== action.id)\n      }\n\n    case SORT_BY:\n      if (state.sortBy === action.field) {\n        return {\n          ...state,\n          order: state.order === ORDER.asc ? ORDER.desc : ORDER.asc,\n        };\n      }\n\n      return {\n        ...state,\n        order: ORDER.asc,\n        sortBy: action.field,\n      }\n\n    case SET_STATUS:\n      return {\n        ...state,\n        todos: state.todos.map(todo => {\n          if (todo.id === action.id) {\n            return {\n              ...todo,\n              completed: !todo.completed\n            }\n          }\n          return todo\n        })\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(),\n);\n\nexport default store;\n","import { API_URL } from '../constants';\n\nexport const getTodos = async (): Promise<Todo[]> => {\n  const response = await fetch(`${API_URL}/todos.json`);\n\n  return response.json();\n};\n\nexport const getUsers = async (): Promise<User[]> => {\n  const response = await fetch(`${API_URL}/users.json`);\n\n  return response.json();\n};\n","import React from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { deleteTodo, setStatus } from '../store';\n\ntype Props = {\n  todo: Todo;\n};\n\nconst TodoItem: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n  const dispatch = useDispatch();\n\n  return (\n    <li>\n      <article className=\"app__todo\">\n        <div>\n          {`TODO: ${title}`}\n        </div>\n        <div>\n          STATUS:\n          {' '}\n          {completed ? 'completed' : 'in progress'}\n          <input\n            checked={completed}\n            type=\"checkbox\"\n            onChange={() => dispatch(setStatus(id))}\n          />\n        </div>\n        <div>\n          RESPONSIBLE:\n          {' '}\n          {user.name}\n        </div>\n        <button\n          type=\"button\"\n          className=\"app__todo-detete\"\n          onClick={() => dispatch(deleteTodo(id))}\n        >\n          x\n        </button>\n      </article>\n    </li>\n  );\n};\n\nexport default TodoItem;\n","import React, { useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport TodoItem from './TodoItem';\nimport { SORT_BY_OPTIONS, ORDER } from '../constants';\nimport {\n  sortBy,\n  getSortBy,\n  getOrder,\n} from '../store';\n\ntype Props = {\n  todos: Todo[];\n};\n\nconst TodoList: React.FC<Props> = ({ todos }) => {\n  const dispatch = useDispatch();\n  const order = useSelector(getOrder);\n  const activeFilter = useSelector(getSortBy);\n\n  const sortedTodos = useMemo(() => {\n    const sortDirection = order === ORDER.asc ? 1 : -1;\n\n    switch (activeFilter) {\n      case SORT_BY_OPTIONS.title:\n        return [...todos]\n          .sort((a, b) => (a.title).localeCompare(b.title) * sortDirection);\n\n      case SORT_BY_OPTIONS.completed:\n        return [...todos]\n          .sort((a, b) => (Number(b.completed) - Number(a.completed)) * sortDirection);\n\n      case SORT_BY_OPTIONS.userName:\n        return [...todos]\n          .sort((a, b) => ((a.user.name).localeCompare(b.user.name)) * sortDirection);\n\n      default:\n        return todos;\n    }\n  }, [activeFilter, todos, order]);\n\n  return (\n    <div>\n      <div className=\"app__list-filters\">\n        <button\n          type=\"button\"\n          onClick={() => dispatch(sortBy(SORT_BY_OPTIONS.title))}\n        >\n          title\n          {activeFilter === SORT_BY_OPTIONS.title && (\n            order === ORDER.asc ? ' (asc)' : ' (desc)'\n          )}\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => dispatch(sortBy(SORT_BY_OPTIONS.completed))}\n        >\n          status\n          {activeFilter === SORT_BY_OPTIONS.completed && (\n            order === ORDER.asc ? ' (asc)' : ' (desc)'\n          )}\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => dispatch(sortBy(SORT_BY_OPTIONS.userName))}\n        >\n          user name\n          {activeFilter === SORT_BY_OPTIONS.userName && (\n            order === ORDER.asc ? ' (asc)' : ' (desc)'\n          )}\n        </button>\n      </div>\n      <ul className=\"app__list\">\n        {sortedTodos.map(todo => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TodoList;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport './App.scss';\nimport { getTodos, getUsers } from './helpers/api';\n\nimport {\n  startLoading,\n  finishLoading,\n  handleSuccess,\n  handleError,\n  hasError,\n  isLoading,\n  listOfTodos,\n} from './store';\nimport TodoList from './components/TodoList';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const loading = useSelector(isLoading);\n  const error = useSelector(hasError);\n  const todos = useSelector(listOfTodos);\n\n  const getData = () => {\n    dispatch(startLoading());\n\n    Promise.all([getTodos(), getUsers()])\n      .then(([todoFromServer, usersFromServer]) => {\n        const preparedTodosList = todoFromServer.map(post => {\n          return {\n            ...post,\n            user: usersFromServer\n              .find(user => user.id === post.userId),\n          };\n        });\n\n        dispatch(handleSuccess(preparedTodosList as Todo[]));\n      })\n      .catch(() => {\n        dispatch(handleError());\n      })\n      .finally(() => {\n        dispatch(finishLoading());\n      });\n  };\n\n  return (\n    <div className=\"app\">\n      {todos.length === 0 && (\n        <button\n          type=\"button\"\n          className=\"app__load-button\"\n          onClick={getData}\n        >\n          {loading ? 'Loading...' : 'LOAD DATA'}\n        </button>\n      )}\n      {error && (\n        <div className=\"app__error\">\n          ERROR OCCURRED, TRY AGAIN\n        </div>\n      )}\n      {todos.length !== 0 && (\n        <TodoList todos={todos} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport store from './store';\nimport App from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}